;;	Program ack
;;	Compiled Sun Dec 31 15:11:49 2000
;---->  program ack
	extern	read_string, write_string
	entry	L0000
FP	equ	1
ForT:	dw	"FT"
;---->  
;---->  function integer ack (integer m, integer n)
	br	L0002
L0001:
	push	FP
	push	SP
	pop	FP
	rot
;---->  	begin
L0003:
;	=> ACK
L0005:
;---->  		if m = 0 then ack := n+1
	push	FP
	pushx	4
	pushv	0
	sub
	tsteq
	bf	L0007
	push	FP
	addx	5
	push	FP
	pushx	3
	pushv	1
;---->  		elseif n = 0 then ack := ack(m-1,1)
	add
	pops
	br	L0008
L0007:
	push	FP
	pushx	3
	pushv	0
	sub
	tsteq
	bf	L0009
	push	FP
	addx	5
	addsp	-1
	push	FP
	pushx	4
	pushv	1
	sub
	pushv	1
	push	FP
	indir
	call	L0001
;---->  		else ack := ack(m-1,ack(m,n-1))
	pops
	br	L0008
L0009:
	push	FP
	addx	5
	addsp	-1
	push	FP
	pushx	4
	pushv	1
	sub
	addsp	-1
	push	FP
	pushx	4
	push	FP
	pushx	3
	pushv	1
	sub
	push	FP
	indir
	call	L0001
	push	FP
	indir
	call	L0001
;---->  		endif
	pops
L0008:
;---->  	end
L0006:
L0004:
	drop
	pop	FP
	retn	2
L0002:
;---->  
;---->  var integer x
L0010:
;---->  var integer y
	ds	1
L0011:
;---->  
;---->  begin
	ds	1
L0000:
;	=> >ACK
L0012:
;---->  	x := 0
	pushv	L0010
	pushv	0
;---->  	while x <= 4 do
	pops
L0014:
	push	L0010
	pushv	4
	sub
	tstle
	bf	L0015
;---->  		y := 0
	pushv	L0011
	pushv	0
;---->  		while y <= 6 do
	pops
L0016:
	push	L0011
	pushv	6
	sub
	tstle
	bf	L0017
;---->  			if x = 4 and y > 0 then
	push	L0010
	pushv	4
	sub
	tsteq
	push	L0011
	pushv	0
	sub
	tstgt
	and
	bf	L0018
;---->  				return
	br	L0013
;---->  			endif
L0018:
L0019:
;---->  			writec "ack("
	br	L0021
L0020:
	dw	97
	dw	99
	dw	107
	dw	40
	dw	0
L0021:
	pushv	L0020
	call	write_string
;---->  			write x
	push	L0010
;---->  			writec ','
	print
	pushv	44
;---->  			write y
	printc
	push	L0011
;---->  			writec ")="
	print
	br	L0023
L0022:
	dw	41
	dw	61
	dw	0
L0023:
	pushv	L0022
	call	write_string
;---->  			write ack(x,y)
	addsp	-1
	push	L0010
	push	L0011
	push	FP
	call	L0001
;---->  			writec '\n'
	print
	pushv	10
;---->  			y := y+1
	printc
	pushv	L0011
	push	L0011
	pushv	1
;---->  		endwhile
	add
	pops
	br	L0016
L0017:
;---->  		x := x+1
	pushv	L0010
	push	L0010
	pushv	1
;---->  	endwhile
	add
	pops
	br	L0014
L0015:
;---->  end
L0013:
	halt
